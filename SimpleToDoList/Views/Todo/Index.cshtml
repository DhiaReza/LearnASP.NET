
@{
    var title = ViewBag.Title;
    @model IEnumerable<SimpleToDoList.Models.ToDoItem>
}
<!DOCTYPE html>
<html>
    <head>

        <meta name="viewport" content="width=device-width, initial-scale=1.0, length=device-length" />

        <title>@title</title>
        <link rel="stylesheet" href="~/css/Todo/Index.css">
    </head>
    <body>
        <div class="title">
            <h3>
                @title
            </h3>
        </div>
        <div class="container-form">
            <form id="createForm" class="form">
                <div id="text">
                    <input type="text" id="Name" name="Name" placeholder="Task Name..."/>
                </div>
                <div id="description">
                    <textarea id="Description" name="Description" placeholder="Task Description..."></textarea>
                </div>
                <div id="button">
                    <button id="FormButton" type="button" onclick="createItem()">Add</button>
                </div>
                
            </form>
        </div>
        <div id="resultMessage"></div>
        <div class="container-item">
            @foreach(var item in Model){
                <div class="box-item">
                    <div id="item-name">@item.Name</div>
                    <div id="item-date">📅@item.DateCreated.ToString("d MMMM, yyyy")</div>
                    <div id="item-description">@item.Description</div>
                    <div id="item-state" class="@(item.IsComplete ? "Finished" : "Unfinished")">
                        @(item.IsComplete ? "Finished" : "Unfinished")
                    </div>
                    <div style="height: 2em;"></div>
                        <div class="action-button">
                            <div>
                                <button class="button" type="button" onclick="changeStatus(@item.ToDoId)">@(item.IsComplete ? "Unfinish" : "Finish")</button>
                            </div>
                            <div>
                                <button class="button" type="button" onclick="editView(@item.ToDoId)">Edit</button>
                            </div>
                            <div>
                                <button class="button" type="button" onclick="deleteItem(@item.ToDoId)">Delete</button>
                            </div>
                        </div>
                    </div>
            }
        </div>
    </body>
</html>

<script>
    function changeStatus(id) {
        fetch('/Todo/ChangeStatus/' + id, {
            method: 'PUT'
        })
        .then(response => {
            if (response.redirected) {
                window.location.href = response.url;
            }
        });
    }
        function deleteItem(id) {
        fetch('/Todo/DeleteItem/' + id, {
            method: 'DELETE'
        })
        .then(response => {
            if (response.redirected) {
                window.location.href = response.url;
            }
        });
    }
    function editView(id){
        fetch('/Todo/EditView/' + id, {
            method:'GET'
        })
        .then(response => {
            if(response.url){
                window.location.href = response.url;
            }
        });
    }
function createItem() {
    const nameInput = document.getElementById("Name");
    const descriptionInput = document.getElementById("Description");
    const resultMessage = document.getElementById("resultMessage");

    const name = nameInput.value.trim();
    const description = descriptionInput.value.trim();

    if (name === "" || description === "") {
        resultMessage.textContent = "Please fill out both fields.";
        return;
    }

    const item = {
        Name: name,
        Description: description
    };

    fetch("/Todo/CreateItem", {
        method: "POST",
        headers: {
            "Content-Type": "application/json"
        },
        body: JSON.stringify(item)
    })
    .then(response => {
        if (response.redirected) {
            window.location.href = response.url;
        } else {
            return response.text().then(errorText => {
                console.error("Error:", errorText);
                resultMessage.textContent = "Error: " + errorText;
            });
        }
    })
    .catch(error => {
        console.error("Error:", error.message);
        resultMessage.textContent = "Error: " + error.message;
    });
}
</script>