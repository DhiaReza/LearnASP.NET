@using Microsoft.AspNetCore.Components.Web
@using Microsoft.AspNetCore.Http.Features
@using Microsoft.EntityFrameworkCore.Metadata.Internal
@{
    ViewData["Title"] = "Home Page";
    @model IEnumerable<Bookstore_MVC.Models.Book>;
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <link rel="stylesheet" href="~/css/index.css">
    @* Include bootstrap CSS and JS file *@
    <link href="~/lib/bootstrap/dist/css/bootstrap.css" rel="stylesheet" />
    <script src="~/lib/bootstrap/dist/js/bootstrap.js"></script>
    <title>@ViewData["Title"]</title>
</head>
<body>
    <div class="container">
        @* <div class="mx-auto pt-4 pb-3">
            <h3>This is a simple CRUD project demonstrating ASP.NET features</h2>
            <div class="pt-1">
                <p>Features demonstrated including : </p>
                <ol class="list-unstyled list-group-numbered ms-4">
                    <li>Razor View</li>
                    <li>Data Annotaion</li>
                    <li>Attributes Routing</li>
                    <li>Dependency Injection</li>
                    <li>EF Core</li>
                    <li>Model Binding and Validation</li>
                </ol>
                <p>Press the action button then fill the required form with absurd values to see the responses.</p>
            </div>
        </div> *@
        <div>
            <a href="/book/add" class="btn btn-success mb-3">Add Book</a>
        </div>
        @if(Model.Count() != 0){
        @* <table class="table-responsive mx-auto text-center w-100 table-sm pt-2 align-middle">
            <tr class="p-1">
                <th class="">#</th>
                <th class="">Title</th>
                <th class="">Author</th>
                <th class="">Price</th>
                <th class="">Action</th>
            </tr>
                @for (int i = 0; i < Model.Count(); i++)
                {
                    var book = Model.ElementAt(i);   // or cast to List<T> if you prefer
                    <tr class="">
                        <td>@(i + 1)</td>           <!-- i is zero‑based, add 1 for display -->
                        <td>@book.Title</td>
                        <td>@book.Author</td>
                        @if(book.Price == 0){
                            <td>FREE</td>
                        }else{
                            <td>$@book.Price</td>
                        }
                        <td>
                            <div class="btn-group-justified mx-2 px-1">
                                <a asp-controller="Book" asp-action="Edit" asp-route-id="@book.Id" class="btn btn-primary">Edit</a>
                                <button type="button" class="btn btn-danger" data-id="@book.Id" onclick="DeleteBook(this)">Delete</button>
                            </div>
                        </td>
                    </tr>
                }
            </table> *@
        <div class="container-fluid">
            <div class="row">
            @foreach(var book in Model){
                <div class="col-md-3 col-sm-1 mb-3">
                    <partial name="_BookCard" for="@book">
                </div>
            }
            </div>
        </div>
        } else {
            <div class="text-center align-middle m-5">
                <h1>
                    Book list is empty
                </h1>
                <p>
                    please add book data first
                </p>
            </div>
        }
        <div>
            <p id="message"></p>
        </div>
        <div class="mx-auto pt-5">
            <p>Made with ASP.NET MVC, SQL Express Server, Bootstrap, and native Javascript</p>
        </div>
    </div>
</div>
<!-- Delete Modal -->
<div class="modal fade" id="messageModal" tabindex="-1" aria-hidden="true">
  <div class="modal-dialog modal-dialog-centered">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title">Notification</h5>
        <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
      </div>
      <div class="modal-body" id="modalMessage"></div>
    </div>
  </div>
</div>
</body>
</html>

<script>
    async function DeleteBook(button) {
        const id = button.getAttribute("data-id");

        try {
            const response = await fetch('/book/deletebook/' + id, {
                method: 'DELETE'
            });

            let message = "";

            if (response.status === 204) {
                message = "Successfully deleted the data";
            } 
            else if (response.status === 404) {
                message = "Data not found";
            } 
            else if (response.status === 400) {
                message = "Bad request: No Id Provided";
            } 
            else {
                message = "Unexpected error occurred";
            }

            // Show modal with message
            document.getElementById("modalMessage").innerText = message;
            const modal = new bootstrap.Modal(document.getElementById("messageModal"));
            modal.show();

            // Refresh page after 2 seconds
            setTimeout(() => {
                window.location.reload();
            }, 1000);

        } catch (error) {
            console.error(error);
            document.getElementById("modalMessage").innerText = "Error connecting to server";
            const modal = new bootstrap.Modal(document.getElementById("messageModal"));
            modal.show();

            setTimeout(() => {
                window.location.reload();
            }, 2000);
        }
    }

    document.addEventListener("DOMContentLoaded", function () {
    var editModal = document.getElementById('editmodal');
    editModal.addEventListener('show.bs.modal', function (event) {
        var button = event.relatedTarget;

        var id = button.getAttribute('data-id');
        var title = button.getAttribute('data-title');
        var author = button.getAttribute('data-author');
        var price = button.getAttribute('data-price');

        document.getElementById('bookId').value = id;
        document.getElementById('bookTitle').value = title;
        document.getElementById('bookAuthor').value = author;
        document.getElementById('bookPrice').value = price;
    });
});
</script>